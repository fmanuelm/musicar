{"ast":null,"code":"import { ClientsService } from '../service/clients.service';\nimport jsPDF from \"jspdf\";\nimport autoTable from 'jspdf-autotable';\nimport * as FileSaver from \"file-saver\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/clients.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"primeng/table\";\nimport * as i4 from \"primeng/api\";\n\nfunction DataTableComponent_ng_template_13_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p\", 16)(1, \"input\", 17);\n    i0.ɵɵlistener(\"input\", function DataTableComponent_ng_template_13_ng_template_1_Template_input_input_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      i0.ɵɵnextContext(2);\n\n      const _r0 = i0.ɵɵreference(12);\n\n      return i0.ɵɵresetView(_r0.filterGlobal($event.target));\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction DataTableComponent_ng_template_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-toolbar\");\n    i0.ɵɵtemplate(1, DataTableComponent_ng_template_13_ng_template_1_Template, 2, 0, \"ng-template\", 15);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DataTableComponent_ng_template_14_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"p-sortIcon\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const col_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSortableColumn\", col_r10.field);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", col_r10.header, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"field\", col_r10.field);\n  }\n}\n\nfunction DataTableComponent_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, DataTableComponent_ng_template_14_th_1_Template, 3, 3, \"th\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const columns_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", columns_r8);\n  }\n}\n\nfunction DataTableComponent_ng_template_15_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const col_r14 = ctx.$implicit;\n    const rowData_r11 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", rowData_r11[col_r14.field], \" \");\n  }\n}\n\nfunction DataTableComponent_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, DataTableComponent_ng_template_15_td_1_Template, 2, 1, \"td\", 21);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const columns_r12 = ctx.columns;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", columns_r12);\n  }\n}\n\nfunction DataTableComponent_ng_template_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"button\", 22);\n  }\n}\n\nexport let DataTableComponent = /*#__PURE__*/(() => {\n  class DataTableComponent {\n    constructor(clientService) {\n      this.clientService = clientService;\n      this.first = 0;\n      this.cols = [{\n        field: 'razon_social',\n        header: 'Razón social'\n      }, {\n        field: 'razon_comercial',\n        header: 'Razón comercial'\n      }, {\n        field: 'nit',\n        header: 'NIT'\n      }, {\n        field: 'tipo_cliente',\n        header: 'Tipo cliente'\n      }, {\n        field: 'paises.nombre',\n        header: 'País'\n      }];\n    }\n\n    ngOnInit() {\n      this.getClients();\n      this.exportColumns = this.cols.map(col => ({\n        title: col.header,\n        dataKey: col.field\n      }));\n    }\n\n    getClients() {\n      this.clientService.getClients().subscribe(response => {\n        this.clients = response;\n      });\n    }\n\n    exportPdf() {\n      const datos = this.clients.map(cliente => {\n        return {\n          razon_social: cliente.razon_social,\n          razon_comercial: cliente.razon_comercial,\n          nit: cliente.nit,\n          tipo_cliente: cliente.tipo_cliente,\n          pais: cliente.pais.nombre\n        };\n      });\n      const exportColumns = this.cols.map(col => ({\n        title: col.header,\n        dataKey: col.field\n      }));\n      const doc = new jsPDF('p', 'pt');\n      autoTable(doc, {\n        columns: exportColumns,\n        body: datos,\n        didDrawPage: dataArg => {\n          doc.text('clientes', dataArg.settings.margin.left, datos.length);\n        }\n      });\n      doc.save(`clientes.pdf`);\n    }\n\n    exportExcel() {\n      const datos = this.clients.map(cliente => {\n        return {\n          razon_social: cliente.razon_social,\n          razon_comercial: cliente.razon_comercial,\n          nit: cliente.nit,\n          tipo_cliente: cliente.tipo_cliente,\n          pais: cliente.pais.nombre\n        };\n      });\n      import('xlsx').then(xlsx => {\n        const worksheet = xlsx.utils.json_to_sheet(datos);\n        const workbook = {\n          Sheets: {\n            'data': worksheet\n          },\n          SheetNames: ['data']\n        };\n        const excelBuffer = xlsx.write(workbook, {\n          bookType: 'xlsx',\n          type: 'array'\n        });\n        this.saveAsExcelFile(excelBuffer, 'clientes');\n      });\n    }\n\n    saveAsExcelFile(buffer, fileName) {\n      let EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n      let EXCEL_EXTENSION = '.xlsx';\n      const data = new Blob([buffer], {\n        type: EXCEL_TYPE\n      });\n      FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\n    }\n\n  }\n\n  DataTableComponent.ɵfac = function DataTableComponent_Factory(t) {\n    return new (t || DataTableComponent)(i0.ɵɵdirectiveInject(i1.ClientsService));\n  };\n\n  DataTableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DataTableComponent,\n    selectors: [[\"app-data-table-cmp\"]],\n    decls: 17,\n    vars: 5,\n    consts: [[1, \"main-content\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"card\"], [1, \"card-header\", \"card-header-primary\", \"card-header-icon\"], [1, \"card-title\"], [1, \"card-body\"], [1, \"material-datatables\"], [\"id\", \"tableClients\", 3, \"columns\", \"value\", \"paginator\", \"rows\", \"first\"], [\"tableClients\", \"\"], [\"pTemplate\", \"caption\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"paginatorcenter\"], [\"pTemplate\", \"left\"], [1, \"control\", \"has-icons-left\"], [\"type\", \"text\", \"pInputText\", \"\", 1, \"input\", \"is-rounded\", 3, \"input\"], [3, \"pSortableColumn\", 4, \"ngFor\", \"ngForOf\"], [3, \"pSortableColumn\"], [3, \"field\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"pButton\", \"\", \"icon\", \"pi-cloud-upload\"]],\n    template: function DataTableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h2\", 6)(7, \"b\");\n        i0.ɵɵtext(8, \" Listar clientes \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"div\", 8)(11, \"p-table\", 9, 10);\n        i0.ɵɵtemplate(13, DataTableComponent_ng_template_13_Template, 2, 0, \"ng-template\", 11);\n        i0.ɵɵtemplate(14, DataTableComponent_ng_template_14_Template, 2, 1, \"ng-template\", 12);\n        i0.ɵɵtemplate(15, DataTableComponent_ng_template_15_Template, 2, 1, \"ng-template\", 13);\n        i0.ɵɵtemplate(16, DataTableComponent_ng_template_16_Template, 1, 0, \"ng-template\", 14);\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"columns\", ctx.cols)(\"value\", ctx.clients)(\"paginator\", true)(\"rows\", 10)(\"first\", ctx.first);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.Table, i4.PrimeTemplate, i3.SortableColumn, i3.SortIcon],\n    encapsulation: 2\n  });\n  return DataTableComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}